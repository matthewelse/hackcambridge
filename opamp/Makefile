# This file was automagically generated by mbed.org. For more information,
# see http://mbed.org/handbook/Exporting-to-GCC-ARM-Embedded

GCC_BIN =
PROJECT = opamp
OBJECTS = ./main.o 
SYS_OBJECTS = ./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM/board.o ./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM/cmsis_nvic.o ./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM/mbed_overrides.o ./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM/retarget.o ./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM/startup_efm32gg.o ./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM/system_efm32gg.o 
INCLUDE_PATHS = -I. -I./mbed -I./mbed/TARGET_EFM32GG_STK3700 -I./mbed/TARGET_EFM32GG_STK3700/TARGET_Silicon_Labs -I./mbed/TARGET_EFM32GG_STK3700/TARGET_Silicon_Labs/TARGET_EFM32 -I./mbed/TARGET_EFM32GG_STK3700/TARGET_Silicon_Labs/TARGET_EFM32/TARGET_EFM32GG_STK3700 -I./mbed/TARGET_EFM32GG_STK3700/TARGET_Silicon_Labs/TARGET_EFM32/emlib -I./mbed/TARGET_EFM32GG_STK3700/TARGET_Silicon_Labs/TARGET_EFM32/emlib/inc -I./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM 
LIBRARY_PATHS = -L./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM 
LIBRARIES = -lmbed 
LINKER_SCRIPT = ./mbed/TARGET_EFM32GG_STK3700/TOOLCHAIN_GCC_ARM/efm32gg.ld

OUT_DIR = bin
OBJ_FOLDER = $(strip $(OUT_DIR))/

############################################################################### 
AS      = $(GCC_BIN)arm-none-eabi-as
CC      = $(GCC_BIN)arm-none-eabi-gcc
CPP     = $(GCC_BIN)arm-none-eabi-g++
LD      = $(GCC_BIN)arm-none-eabi-gcc
OBJCOPY = $(GCC_BIN)arm-none-eabi-objcopy
OBJDUMP = $(GCC_BIN)arm-none-eabi-objdump
SIZE    = $(GCC_BIN)arm-none-eabi-size 


CPU = -mcpu=cortex-m3 -mthumb 
CC_FLAGS = $(CPU) -c -g -fno-common -fmessage-length=0 -Wall -Wextra -fno-exceptions -ffunction-sections -fdata-sections -fomit-frame-pointer -MMD -MP
CC_SYMBOLS = -DEFM32GG990F1024 -DTOOLCHAIN_GCC_ARM -DTOOLCHAIN_GCC -DTARGET_CORTEX_M -DTARGET_Silicon_Labs -DARM_MATH_CM3 -DMBED_BUILD_TIMESTAMP=1454238109.46 -DTARGET_EFM32 -D__CORTEX_M3 -DTARGET_M3 -DTARGET_EFM32GG_STK3700 -D__MBED__=1 

ifeq ($(DEBUG), 1)
  CC_FLAGS += -DDEBUG -O0
else
  CC_FLAGS += -DNDEBUG -Os
endif

LD_FLAGS = $(CPU) -Wl,--gc-sections --specs=nano.specs -u _printf_float -u _scanf_float -Wl,--wrap,main -Wl,-Map=$(OBJ_FOLDER)$(PROJECT).map,--cref
LD_SYS_LIBS = -lstdc++ -lsupc++ -lm -lc -lgcc -lnosys


.PHONY: all clean lst size

all: create_outputdir $(OBJ_FOLDER)$(PROJECT).bin $(OBJ_FOLDER)$(PROJECT).hex size


create_outputdir:
	$(shell mkdir $(OBJ_FOLDER) 2>/dev/null)


clean:
	rm -f $(OBJ_FOLDER)$(PROJECT).bin $(OBJ_FOLDER)$(PROJECT).axf $(OBJ_FOLDER)$(PROJECT).hex $(OBJ_FOLDER)$(PROJECT).map $(PROJECT).lst $(OBJECTS) $(DEPS)


.s.o:
	$(AS) $(CPU) -o $@ $<

.c.o:
	$(CC)  $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu99   $(INCLUDE_PATHS) -o $@ $<

.cpp.o:
	$(CPP) $(CC_FLAGS) $(CC_SYMBOLS) -std=gnu++98 -fno-rtti $(INCLUDE_PATHS) -o $@ $<



$(OBJ_FOLDER)$(PROJECT).axf: $(OBJECTS) $(SYS_OBJECTS)
	$(LD) $(LD_FLAGS) -T$(LINKER_SCRIPT) $(LIBRARY_PATHS) -o $@ $^ $(LIBRARIES) $(LD_SYS_LIBS) $(LIBRARIES) $(LD_SYS_LIBS)
	@echo ""
	@echo "*****"
	@echo "***** You must modify vector checksum value in *.bin and *.hex files."
	@echo "*****"
	@echo ""


$(OBJ_FOLDER)$(PROJECT).bin: $(OBJ_FOLDER)$(PROJECT).axf
	@$(OBJCOPY) -O binary $< $@

$(OBJ_FOLDER)$(PROJECT).hex: $(OBJ_FOLDER)$(PROJECT).axf
	@$(OBJCOPY) -O ihex $< $@

$(OBJ_FOLDER)$(PROJECT).lst: $(OBJ_FOLDER)$(PROJECT).axf
	@$(OBJDUMP) -Sdh $< > $@

lst: $(OBJ_FOLDER)$(PROJECT).lst

size: $(OBJ_FOLDER)$(PROJECT).axf
	$(SIZE) $(OBJ_FOLDER)$(PROJECT).axf

DEPS = $(OBJECTS:.o=.d) $(SYS_OBJECTS:.o=.d)
-include $(DEPS)


